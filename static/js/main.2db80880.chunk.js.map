{"version":3,"sources":["redux/slices/weather/constants.ts","utils/api/weather.ts","utils/helpers.ts","redux/slices/weather/slice.ts","redux/store/index.ts","pages/Load/index.tsx","hooks/useReduxHooks.ts","hooks/useWeather.ts","components/WeatherCard/styles.ts","components/WeatherCard/index.tsx","components/Slide/index.tsx","components/Slideshow/index.tsx","components/BarChart/index.tsx","pages/Weather/styles.ts","pages/Weather/index.tsx","pages/NotFound/index.tsx","components/Header/styles.ts","components/Header/index.tsx","App.tsx","index.tsx"],"names":["StatusType","initialState","status","PENDING","city","activeCard","weatherByDays","fetchWeatherData","a","fetch","process","response","ok","json","data","Error","getWeatherByDays","list","days","map","day","filter","item","dayjs","dt_txt","format","groupWeatherByDays","uniq","getWeatherListDays","convertKelvinToCelsius","kelvin","Math","round","fetchWeather","createAsyncThunk","weatherSlice","createSlice","name","reducers","setActiveCard","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","FULFILLED","rejected","REJECTED","actions","store","configureStore","reducer","weather","Load","Box","display","height","alignItems","justifyContent","CircularProgress","data-testid","useAppSelector","useSelector","useWeather","dispatch","useDispatch","getActiveCard","getWeather","weatherItemsPerSlide","chunk","itemsPerSlide","useStyles","makeStyles","root","width","bullet","margin","transform","title","fontSize","pos","marginBottom","WeatherCard","classes","main","dt","isActiveCard","isEqual","Card","className","raised","CardActionArea","onClick","CardContent","Typography","variant","temp","color","temp_min","temp_max","description","component","unix","Avatar","alt","src","icon","Slide","slide","card","Slideshow","autoPlay","animation","indicators","cycleNavigation","navButtonsAlwaysVisible","next","active","console","log","prev","index","year","population","BarChart","Paper","valueField","argumentField","text","slideShow","padding","Weather","NotFound","theme","createStyles","flexGrow","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","spacing","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","Header","AppBar","Toolbar","noWrap","InputBase","placeholder","input","inputProps","App","useEffect","Container","fixed","renderContent","ReactDOM","render","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.2db80880.chunk.js","sourcesContent":["import { List } from \"utils/interfaces/IWeather\";\n\nexport enum StatusType {\n  PENDING = \"pending\",\n  REJECTED = \"rejected\",\n  FULFILLED = \"fulfilled\",\n}\n\nexport interface WeatherState {\n  status: StatusType;\n  city: string;\n  activeCard: List | null;\n  weatherByDays: List[][];\n}\n\nexport const initialState: WeatherState = {\n  status: StatusType.PENDING,\n  city: \"\",\n  activeCard: null,\n  weatherByDays: [],\n};\n","import { RootWeatherObject } from \"utils/interfaces/IWeather\";\n\nexport const WEATHER_API: string = process.env.REACT_APP_WEATHER_API || \"\";\nconst fetchWeatherData = async (): Promise<RootWeatherObject> => {\n  try {\n    const response = await fetch(WEATHER_API);\n    if (response.ok) {\n      const data = await response.json();\n      return data;\n    }\n    throw new Error(\"Something went wrong\");\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport default fetchWeatherData;\n","import { uniq, chunk } from \"lodash\";\nimport dayjs from \"dayjs\";\nimport { List } from \"./interfaces/IWeather\";\n\nexport const getWeatherListDays = (list: List[]): string[] =>\n  uniq(list?.map((item) => dayjs(item.dt_txt!).format(\"DD\")));\n\nexport const groupWeatherByDays = (days: string[], list: List[]): List[][] =>\n  days.map((day: string) =>\n    list?.filter((item) => dayjs(item.dt_txt!).format(\"DD\") === day)\n  );\n\nexport const getWeatherItemsPerSlide = (weatherByDays: List[][]): List[][] =>\n  chunk(weatherByDays, 3).map((itemsPerSlide) =>\n    itemsPerSlide.map((item) => item[0])\n  );\n\nexport const getWeatherByDays = (list: List[]): List[][] => {\n  const days = getWeatherListDays(list);\n  return groupWeatherByDays(days, list);\n};\n\nexport const convertKelvinToCelsius = (kelvin: number): number =>\n  Math.round((kelvin - 273.15) * 100) / 100;\n","/* eslint-disable no-param-reassign */\nimport fetchWeatherData from \"utils/api/weather\";\nimport { getWeatherByDays } from \"utils/helpers\";\nimport { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\nimport { List } from \"utils/interfaces/IWeather\";\nimport { initialState, StatusType } from \"./constants\";\n\nexport const fetchWeather = createAsyncThunk(\"weather/fetchWeather\", async () =>\n  fetchWeatherData()\n);\n\nexport const weatherSlice = createSlice({\n  name: \"weather\",\n  initialState,\n  reducers: {\n    setActiveCard: (state, action: PayloadAction<List>) => {\n      state.activeCard = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchWeather.pending, (state) => {\n      state.status = StatusType.PENDING;\n    });\n    builder.addCase(fetchWeather.fulfilled, (state, action) => {\n      const weatherByDays = getWeatherByDays(action.payload?.list);\n\n      state.city = action.payload?.city.name;\n      state.weatherByDays = weatherByDays;\n      state.status = StatusType.FULFILLED;\n    });\n    builder.addCase(fetchWeather.rejected, (state) => {\n      state.city = \"\";\n      state.weatherByDays = [];\n      state.status = StatusType.REJECTED;\n    });\n  },\n});\n\nexport const { setActiveCard } = weatherSlice.actions;\nexport default weatherSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { weatherSlice } from \"redux/slices/weather\";\n\nconst store = configureStore({\n  reducer: {\n    weather: weatherSlice,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport default store;\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Load: React.FC = () => {\n  return (\n    <Box\n      display=\"flex\"\n      height=\"100vh\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <CircularProgress data-testid=\"loader\" />\n    </Box>\n  );\n};\n\nexport default Load;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"redux/store\";\n\nexport const useAppDispatch = (): AppDispatch => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { fetchWeather, setActiveCard } from \"redux/slices/weather\";\nimport { getWeatherItemsPerSlide } from \"utils/helpers\";\nimport { useAppSelector, useAppDispatch } from \"hooks/useReduxHooks\";\nimport { List } from \"utils/interfaces/IWeather\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nconst useWeather = () => {\n  const dispatch = useAppDispatch();\n  const weather = useAppSelector((state) => state.weather);\n\n  return {\n    city: weather.city,\n    status: weather.status,\n    getActiveCard: weather.activeCard,\n    getWeather: () => dispatch(fetchWeather()),\n    weatherItemsPerSlide: getWeatherItemsPerSlide(weather.weatherByDays),\n    setActiveCard: (activeCard: List) => dispatch(setActiveCard(activeCard)),\n  };\n};\n\nexport default useWeather;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"30%\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default useStyles;\n","import React from \"react\";\nimport dayjs from \"dayjs\";\nimport Card from \"@material-ui/core/Card\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { List } from \"utils/interfaces/IWeather\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { convertKelvinToCelsius } from \"utils/helpers\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport useWeather from \"hooks/useWeather\";\nimport { isEqual } from \"lodash\";\nimport useStyles from \"./styles\";\n\ninterface Props {\n  data: List;\n}\n\nconst WeatherCard: React.FC<Props> = ({ data }) => {\n  const classes = useStyles();\n  const { setActiveCard, getActiveCard } = useWeather();\n\n  const { main, weather, dt } = data;\n  const isActiveCard = isEqual(getActiveCard, data);\n\n  return (\n    <Card className={classes.root} raised={isActiveCard}>\n      <CardActionArea onClick={() => setActiveCard(data)}>\n        <CardContent>\n          <Typography variant=\"h3\">\n            {convertKelvinToCelsius(main?.temp)}\n          </Typography>\n\n          <Typography className={classes.pos} color=\"textSecondary\">\n            {`L: ${convertKelvinToCelsius(\n              main?.temp_min\n            )} H: ${convertKelvinToCelsius(main?.temp_max)}`}\n          </Typography>\n\n          <Typography className={classes.pos} color=\"textSecondary\">\n            {`${weather[0]?.main}, ${weather[0]?.description}`}\n          </Typography>\n\n          <Typography variant=\"body2\" component=\"p\">\n            {dt && dayjs.unix(dt).format(\"D\tMMM YYYY\")}\n          </Typography>\n\n          <Avatar\n            alt=\"Weather\"\n            src={`https://openweathermap.org/img/wn/${weather[0]?.icon}@2x.png`}\n          />\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default WeatherCard;\n","import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport WeatherCard from \"components/WeatherCard\";\nimport { List } from \"utils/interfaces/IWeather\";\n\ninterface Props {\n  slide: List[];\n}\n\nconst Slide: React.FC<Props> = ({ slide }) => {\n  return (\n    <Box\n      display=\"flex\"\n      height=\"100%\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n    >\n      {slide.map((card) => (\n        <WeatherCard data={card} />\n      ))}\n    </Box>\n  );\n};\n\nexport default Slide;\n","import React from \"react\";\nimport Slide from \"components/Slide\";\nimport useWeather from \"hooks/useWeather\";\nimport Carousel from \"react-material-ui-carousel\";\n\ninterface Props {\n  className?: string;\n}\n\nconst Slideshow: React.FC<Props> = ({ className }) => {\n  const { weatherItemsPerSlide } = useWeather();\n\n  return (\n    <Carousel\n      className={className}\n      autoPlay={false}\n      animation=\"slide\"\n      indicators={false}\n      cycleNavigation={false}\n      navButtonsAlwaysVisible\n      next={(next: string, active: string) =>\n        // eslint-disable-next-line no-console\n        console.log(`we left ${active}, and are now at ${next}`)\n      }\n      prev={(prev: string, active: string) =>\n        // eslint-disable-next-line no-console\n        console.log(`we left ${active}, and are now at ${prev}`)\n      }\n    >\n      {weatherItemsPerSlide.map((slide, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <Slide key={index} slide={slide} />\n      ))}\n    </Carousel>\n  );\n};\n\nexport default Slideshow;\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  Chart,\n  BarSeries,\n  Title,\n  ArgumentAxis,\n  ValueAxis,\n} from \"@devexpress/dx-react-chart-material-ui\";\nimport { Animation } from \"@devexpress/dx-react-chart\";\n\nconst data = [\n  { year: \"1950\", population: 2.525 },\n  { year: \"1960\", population: 3.018 },\n  { year: \"1970\", population: 3.682 },\n  { year: \"1980\", population: 4.44 },\n  { year: \"1990\", population: 5.31 },\n  { year: \"2000\", population: 6.127 },\n  { year: \"2010\", population: 6.93 },\n];\n\nconst BarChart: React.FC = () => (\n  <Paper>\n    <Chart data={data}>\n      <ArgumentAxis />\n      <ValueAxis />\n      <BarSeries valueField=\"population\" argumentField=\"year\" />\n      <Title text=\"World population\" />\n      <Animation />\n    </Chart>\n  </Paper>\n);\n\nexport default BarChart;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  slideShow: {\n    padding: \"1rem 0\",\n    marginBottom: \"2rem\",\n  },\n});\n\nexport default useStyles;\n","import React from \"react\";\nimport Slideshow from \"components/Slideshow\";\nimport BarChart from \"components/BarChart\";\nimport useWeather from \"hooks/useWeather\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useStyles from \"./styles\";\n\nconst Weather: React.FC = () => {\n  const classes = useStyles();\n  const { city } = useWeather();\n\n  return (\n    <section data-testid=\"weather\">\n      <Typography variant=\"h2\">{city}</Typography>\n      <Slideshow className={classes.slideShow} />\n      <BarChart />\n    </section>\n  );\n};\n\nexport default Weather;\n","import React from \"react\";\n\nconst NotFound: React.FC = () => {\n  return <h1>Not Found</h1>;\n};\n\nexport default NotFound;\n","import {\n  fade,\n  Theme,\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    title: {\n      flexGrow: 1,\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\",\n      },\n    },\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(1),\n        width: \"auto\",\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    inputRoot: {\n      color: \"inherit\",\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"12ch\",\n        \"&:focus\": {\n          width: \"20ch\",\n        },\n      },\n    },\n  })\n);\n\nexport default useStyles;\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useStyles from \"./styles\";\n\nconst Header: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Weather App\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","import Load from \"pages/Load\";\nimport Weather from \"pages/Weather\";\nimport NotFound from \"pages/NotFound\";\nimport Header from \"components/Header\";\nimport React, { useEffect } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { StatusType } from \"redux/slices/weather\";\nimport useWeather from \"hooks/useWeather\";\n\nconst App: React.FC = () => {\n  const { status, getWeather } = useWeather();\n\n  useEffect(() => {\n    getWeather();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const renderContent = (): JSX.Element => {\n    const { PENDING, FULFILLED, REJECTED } = StatusType;\n\n    if (status === PENDING) return <Load />;\n    if (status === FULFILLED) return <Weather />;\n    if (status === REJECTED) return <NotFound />;\n\n    return <></>;\n  };\n\n  return (\n    <>\n      <Header />\n      <Container className=\"App\" fixed>\n        {renderContent()}\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"redux/store\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <CssBaseline />\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}